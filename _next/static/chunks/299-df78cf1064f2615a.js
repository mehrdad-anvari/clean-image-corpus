"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[299],{4383:(e,r,t)=>{async function o(e){let r=document.createElement("canvas");r.width=8,r.height=8;let t=r.getContext("2d");t.drawImage(e,0,0,8,8);let o=t.getImageData(0,0,8,8).data,a=[];for(let e=0;e<64;e++){let r=o[4*e],t=o[4*e+1],n=o[4*e+2];a[e]=.299*r+.587*t+.114*n}let n=a.reduce((e,r)=>e+r,0)/a.length;return a.map(e=>e>=n?"1":"0").join("")}t.d(r,{AK:()=>p,SR:()=>h,kg:()=>f,jo:()=>c,ze:()=>l,lN:()=>i,Wb:()=>g,wZ:()=>u,kP:()=>m});let a=e=>new Promise((r,t)=>{let o=URL.createObjectURL(e),a=new Image;a.onload=()=>{r(a),URL.revokeObjectURL(o)},a.onerror=t,a.src=o}),n="images";async function i(){await new Promise((e,r)=>{let t=indexedDB.deleteDatabase("ImagesDB");t.onsuccess=()=>e(t.result),t.onerror=()=>r(t.error)})}async function l(e){let r;let t="images",o="images-indexeddb-backup.json",a=await new Promise((e,r)=>{let o=indexedDB.open("ImagesDB",1);o.onupgradeneeded=e=>{let r=e.target.result;if(!r.objectStoreNames.contains(t)){let e=r.createObjectStore(t,{keyPath:"name"});e.createIndex("name","name"),e.createIndex("width","width"),e.createIndex("height","height"),e.createIndex("format","format"),e.createIndex("createdAt","createdAt"),e.createIndex("modifiedAt","modifiedAt"),e.createIndex("perceptualHash","perceptualHash"),e.createIndex("similarityOrder","similarityOrder")}},o.onsuccess=()=>e(o.result),o.onerror=()=>r(o.error)});try{r=await e.getFileHandle(o,{create:!1});let n=await r.getFile(),i=await n.text(),l=JSON.parse(i);if(!Array.isArray(l))throw Error("Invalid backup format");let s=a.transaction(t,"readwrite"),c=s.objectStore(t);for(let e of l)c.put(e);await new Promise((e,r)=>{s.oncomplete=()=>e(null),s.onerror=()=>r(s.error)}),console.log("IndexedDB loaded from existing backup.")}catch(a){r=await e.getFileHandle(o,{create:!0});let t=await r.createWritable();await t.write("[]"),await t.close(),console.log("No backup found. Created an empty backup file.",a)}return a}function s(e){return new Promise((r,t)=>{let o=URL.createObjectURL(e),a=new Image;a.onload=()=>{r([a.width,a.height,a]),URL.revokeObjectURL(o)},a.onerror=e=>{URL.revokeObjectURL(o),t(e)},a.src=o})}async function c(e,r){let t=[];for await(let[r,n]of e.entries())if("file"===n.kind){let n=await e.getFileHandle(r),i=await n.getFile(),[l,c,d]=await s(i),u=await a(i),w=await o(u);t.push([r,l,c,w])}for(let[e,o,a,n]of t)await new Promise((t,i)=>{let l=r.transaction("images","readwrite").objectStore("images"),s=l.get(e);s.onsuccess=()=>{if(s.result)console.log("Already exists:",e),t();else{var r;let s=(null===(r=e.split(".").pop())||void 0===r?void 0:r.toLowerCase())||"unknown",c=l.add({name:e,format:s,width:o,height:a,createdAt:Date.now(),modifiedAt:Date.now(),perceptualHash:n});c.onsuccess=()=>{console.log("Added:",e),t()},c.onerror=r=>{console.error("Add error for",e,r),i(c.error)}}},s.onerror=r=>{console.error("Get error for",e,r),i(s.error)}});console.log("All new images processed."),await d(r),console.log("order computed")}async function d(e){let r=e.transaction("images","readonly").objectStore("images"),t=function(e){if(0===e.length)return[];let r=new Set,t=[],o=e[0];for(r.add(o.name),t.push(o);t.length<e.length;){let a=null,n=1/0;for(let t of e){if(r.has(t.name))continue;let e=function(e,r){let t=0;for(let o=0;o<e.length;o++)e[o]!==r[o]&&t++;return t}(o.perceptualHash,t.perceptualHash);e<n&&(n=e,a=t)}if(a)r.add(a.name),t.push(a),o=a;else break}return t}(await new Promise((e,t)=>{let o=r.getAll();o.onsuccess=()=>e(o.result),o.onerror=()=>t(o.error)}));for(let r=0;r<t.length;r++){let o=t[r];o.similarityOrder=r,await new Promise((r,t)=>{let a=e.transaction("images","readwrite").objectStore("images").put(o);a.onsuccess=()=>r(),a.onerror=()=>t(a.error)})}}async function u(e,r){let t="images",o=e.transaction(t,"readonly").objectStore(t).getAll(),a=await new Promise((e,r)=>{o.onsuccess=()=>e(o.result),o.onerror=()=>r(o.error)}),n=await r.getFileHandle("images-indexeddb-backup.json",{create:!0}),i=await n.createWritable();await i.write(JSON.stringify(a,null,2)),await i.close(),console.log("Saved ".concat(a.length," records from IndexedDB to backup file."))}async function w(e,r){let t="images",o=e.transaction(t,"readwrite").objectStore(t);for(let e of r){let r=e.name,t=o.delete(r);await new Promise((e,r)=>{t.onsuccess=()=>e(),t.onerror=()=>r(t.error)})}}async function g(e,r,t){let o=!1;try{await w(e,[{name:t}]),o=!0,console.log("Record removed successsfully")}catch(e){console.error("Error removing record:",e)}if(o)try{await r.removeEntry(t),console.log("File removed successfully.")}catch(e){console.error("Error removing file:",e)}}async function m(e,r){let t="images",n=new Set;for await(let[l,c]of e.entries()){if("file"===c.kind){if(n.add(l),!await new Promise((e,o)=>{let a=r.transaction(t,"readwrite").objectStore(t).get(l);a.onsuccess=()=>e(!!a.result),a.onerror=()=>o(a.error)}))try{var i;let n=await e.getFileHandle(l),c=await n.getFile(),[d,u,w]=await s(c),g=await a(c),m=await o(g),f=(null===(i=l.split(".").pop())||void 0===i?void 0:i.toLowerCase())||"unknown",h={name:l,format:f,width:d,height:u,createdAt:Date.now(),modifiedAt:Date.now(),perceptualHash:m};console.log(h),await new Promise((e,o)=>{let a=r.transaction(t,"readwrite").objectStore(t).add(h);a.onsuccess=()=>{console.log("Added:",l),e()},a.onerror=()=>o(a.error)})}catch(e){console.error("Error processing image:",l,e)}}}await new Promise((e,o)=>{let a=r.transaction(t,"readwrite").objectStore(t).openCursor();a.onsuccess=r=>{let t=r.target.result;if(!t)return e();let o=t.value;n.has(o.name)||t.delete(),t.continue()},a.onerror=()=>o(a.error)}),await d(r),console.log("order computed"),console.log("Database sync complete.")}async function f(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;if(!e||!r)return[];let a=r.transaction(n,"readonly").objectStore(n),i=[],l=0,s=t;await new Promise((e,r)=>{let n=a.index("similarityOrder").openCursor();n.onerror=()=>{console.error("Error reading images:",n.error),r(n.error)},n.onsuccess=r=>{let a=r.target.result;if(!a||i.length>=o){e();return}if(l<t){l++,a.continue();return}let n=a.value;i.push([s++,n.name,n]),a.continue()}});let c=[];for(let[r,t,o]of i)try{let a=await e.getFileHandle(t),n=await a.getFile(),i=URL.createObjectURL(n);c.push([r,i,o])}catch(e){console.warn("Could not load file for image: ".concat(t))}return c}async function h(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10;if(!e)return;let o=e.transaction(n,"readonly").objectStore(n),a=[],i=0;return await new Promise((e,n)=>{let l=o.index("similarityOrder").openCursor();l.onerror=()=>{console.error("Error reading images:",l.error),n(l.error)},l.onsuccess=o=>{let n=o.target.result;if(!n||a.length>=t){e();return}if(i<r){i++,n.continue();return}a.push(n.value),n.continue()}}),a}async function p(e){let r=e.transaction(n,"readonly").objectStore(n);return new Promise((e,t)=>{let o=r.count();o.onerror=()=>{console.log("Error in counting images",o.error),t(o.error)},o.onsuccess=()=>{e(o.result)}})}},5373:(e,r,t)=>{t.d(r,{B:()=>l,ProjectProvider:()=>i});var o=t(5155),a=t(2115);let n=(0,a.createContext)(void 0);function i(e){let{children:r}=e,[t,i]=(0,a.useState)(null),[l,s]=(0,a.useState)(null),[c,d]=(0,a.useState)(null),[u,w]=(0,a.useState)(null),[g,m]=(0,a.useState)(!1);return(0,o.jsx)(n.Provider,{value:{rootDirHandle:t,setRootDirHandle:i,imagesDirHandle:l,setImagesDirHandle:s,annotationsDirHandle:c,setAnnotationsDirHandle:d,db:u,setDb:w,isReady:g,setIsReady:m},children:r})}function l(){let e=(0,a.useContext)(n);if(!e)throw Error("useProject must be used within a ProjectProvider");return e}}}]);