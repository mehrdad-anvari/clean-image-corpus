"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[738],{1006:(t,e,a)=>{a.d(e,{Ay:()=>b,GI:()=>i,Ih:()=>c,K9:()=>d,LT:()=>h,Q6:()=>o,QH:()=>l,Zv:()=>x,_h:()=>s,k5:()=>y,oc:()=>g,y5:()=>r});let n=(0,a(1990).Z0)({name:"annotationSettings",initialState:{bbox:{0:{name:"default",color:[255,255,255]}},keypoint:{0:{name:"default",color:[255,255,255]}},polygon:{0:{name:"default",color:[255,255,255]}},line:{0:{name:"default",color:[255,255,255]}},obb:{0:{name:"default",color:[255,255,255]}},rectMinEdgeSize:.02},reducers:{addRectClass:(t,e)=>{t.bbox[e.payload.id]=e.payload.attrs},addPointClass:(t,e)=>{t.keypoint[e.payload.id]=e.payload.attrs},addPolygonClass:(t,e)=>{t.polygon[e.payload.id]=e.payload.attrs},addLineClass:(t,e)=>{t.line[e.payload.id]=e.payload.attrs},addObbClass:(t,e)=>{t.obb[e.payload.id]=e.payload.attrs},deleteRectClass:(t,e)=>{delete t.bbox[e.payload]},deletePointClass:(t,e)=>{delete t.keypoint[e.payload]},deletePolygonClass:(t,e)=>{delete t.polygon[e.payload]},deleteLineClass:(t,e)=>{delete t.line[e.payload]},deleteObbClass:(t,e)=>{delete t.obb[e.payload]},setSettings:(t,e)=>({...t,...e.payload})}}),{addRectClass:o,deleteRectClass:l,addPolygonClass:s,deletePolygonClass:i,addPointClass:r,deletePointClass:c,addLineClass:d,deleteLineClass:y,addObbClass:x,deleteObbClass:h,setSettings:g}=n.actions,b=n.reducer},1783:(t,e,a)=>{a.d(e,{Ay:()=>K,B:()=>N,Bb:()=>I,Bj:()=>D,C5:()=>V,CO:()=>W,DE:()=>E,HD:()=>M,Hv:()=>F,Kg:()=>b,M:()=>u,Mu:()=>P,Nz:()=>J,O8:()=>j,OE:()=>y,QA:()=>_,Rx:()=>T,U_:()=>g,_:()=>Z,_y:()=>v,aA:()=>A,cE:()=>f,cr:()=>h,eU:()=>k,fw:()=>p,ke:()=>O,kf:()=>Q,nF:()=>z,nT:()=>L,nj:()=>m,pd:()=>R,rJ:()=>S,rY:()=>d,sY:()=>B,v0:()=>w,vJ:()=>C,xJ:()=>x,xh:()=>H,yx:()=>U});var n=a(1990),o=a(7355),l=a(8108),s=a(2335),i=a(7132);let r={selectedAnnotation:-1,selectedVertex:-1,hoveringAnnotation:-1,hoveringVertex:-1,annotations:{},annotationsHistory:{0:{annotations:{},length:0}},historyIndex:0,selectedTool:"SELECT",width:640,height:640,selectedClassID:0,lastIndex:0,historyLastIndex:0,zoom:800,offsets:{x:0,y:0},isDrawing:!1,isEditing:!1,isHandleSelected:!1,isHoveringHandle:!1,previousMousePosition:null},c=(0,n.Z0)({name:"canvas",initialState:r,reducers:{loadAnnotations:(t,e)=>{t.lastIndex=e.payload.length;let a={};e.payload.forEach((t,e)=>{a[e]={object:t}}),t.annotations=a,t.annotationsHistory={0:{annotations:a,length:e.payload.length}}},startDrawRect:(t,e)=>{let a=e.payload.classID,n=e.payload.mousePosition,o={type:"bbox",class_id:a,x1:n.x,y1:n.y,x2:n.x,y2:n.y};t.annotations[t.lastIndex]={object:o},t.lastIndex+=1},startDrawObb:(t,e)=>{let a=e.payload.classID,n=e.payload.mousePosition,o={type:"obb",class_id:a,xc:n.x,yc:n.y,w:0,h:0,alpha:0};t.annotations[t.lastIndex]={object:o},t.lastIndex+=1},startDrawPoly:(t,e)=>{let a=e.payload.classID,n=e.payload.mousePosition,o={type:"polygon",class_id:a,shell:[{x:n.x,y:n.y},{x:n.x,y:n.y}]};t.annotations[t.lastIndex]={object:o},t.selectedAnnotation=t.lastIndex,t.lastIndex+=1},drawPoint:(t,e)=>{let a=e.payload.classID,n=e.payload.mousePosition,o={type:"keypoint",class_id:a,x:n.x,y:n.y};t.annotations[t.lastIndex]={object:o},t.lastIndex+=1},resetHistory:t=>{t.annotationsHistory={0:{annotations:{},length:0}},t.historyIndex=0},saveAnnotationsHistory:t=>{t.annotationsHistory[t.historyIndex+1]={annotations:t.annotations,length:t.lastIndex},t.historyLastIndex=t.historyIndex+1,t.historyIndex+=1,console.log("saving state")},goForwardHistory:t=>{t.historyIndex<t.historyLastIndex&&(t.historyIndex+=1,t.annotations=t.annotationsHistory[t.historyIndex].annotations,t.lastIndex=t.annotationsHistory[t.historyIndex].length)},goBackwardHistory:t=>{t.historyIndex>0&&(t.historyIndex-=1,t.annotations=t.annotationsHistory[t.historyIndex].annotations,t.lastIndex=t.annotationsHistory[t.historyIndex].length)},updateDrawRect:(t,e)=>{let a=t.annotations[t.lastIndex-1].object;if("bbox"!=a.type)return;let n=e.payload;t.annotations[t.lastIndex-1].object={type:"bbox",class_id:a.class_id,x1:a.x1,y1:a.y1,x2:n.x,y2:n.y}},updateDrawObb:(t,e)=>{let a=t.annotations[t.lastIndex-1].object;if("obb"!=a.type)return;let n=e.payload,o=n.x>a.xc?a.xc-a.w/2:a.xc+a.w/2,l=n.y>a.yc?a.yc-a.h/2:a.yc+a.h/2,s=(n.x+o)/2,i=(n.y+l)/2,r=Math.abs(o-n.x),c=Math.abs(l-n.y);t.annotations[t.lastIndex-1].object={type:"obb",class_id:a.class_id,xc:s,yc:i,w:r,h:c,alpha:0}},updateDrawPoly:(t,e)=>{let a=t.annotations[t.lastIndex-1].object;if("polygon"!=a.type)return;let n=e.payload;t.annotations[t.lastIndex-1].object=i.A.addVertex(a,n.x,n.y)},updateDrawPolyVertex:(t,e)=>{let a=t.annotations[t.lastIndex-1].object;if("polygon"!=a.type)return;let n=e.payload;t.annotations[t.lastIndex-1].object=i.A.moveVertex(a,n.x,n.y)},updateAnnotation:(t,e)=>{t.annotations[e.payload.Index].object=e.payload.updatedAnnotation},updateHoveringAnnotation:(t,e)=>{t.hoveringAnnotation=-1;let a=e.payload;for(let[e,n]of Object.entries(t.annotations)){switch(n.object.type){case"polygon":i.A.containPoint(n.object,a.x,a.y)&&(t.hoveringAnnotation=Number(e));break;case"obb":s.A.containPoint(n.object,a.x,a.y)&&(t.hoveringAnnotation=Number(e));break;case"bbox":o.A.containPoint(n.object,a.x,a.y)&&(t.hoveringAnnotation=Number(e));break;case"line":break;case"keypoint":l.A.isNear(n.object,a.x,a.y)&&(t.hoveringAnnotation=Number(e))}if(-1!=t.hoveringAnnotation)break}},updateHoveringVertex:(t,e)=>{let a=e.payload;if(t.selectedAnnotation>-1){let e=t.annotations[t.selectedAnnotation].object,n=null;switch(e.type){case"polygon":n=i.A.findNearestVertex(e,a.x,a.y);break;case"obb":n=s.A.findNearestVertex(e,a.x,a.y);break;case"bbox":n=o.A.findNearestVertex(e,a.x,a.y)}null!=n?t.hoveringVertex=n:t.hoveringVertex=-1}},updateHoveringHandle:(t,e)=>{let a=e.payload;if(t.selectedAnnotation>-1){let e=t.annotations[t.selectedAnnotation].object;switch(e.type){case"polygon":break;case"obb":t.isHoveringHandle=s.A.isHoveringHandle(e,a.x,a.y)}}},setHandle:(t,e)=>{t.isHandleSelected=e.payload},selectAnnotationFromHover:t=>{t.selectedAnnotation=t.hoveringAnnotation},selectVertexFromHover:t=>{t.selectedVertex=t.hoveringVertex},resetSelectedAnnotation:t=>{t.selectedAnnotation=-1},setSelectedAnnotation:(t,e)=>{t.selectedAnnotation=e.payload},resetSelectedVertex:t=>{t.selectedVertex=-1},moveVertex:(t,e)=>{let a=e.payload;if(t.selectedAnnotation>-1&&t.selectedVertex>-1){let e=t.annotations[t.selectedAnnotation].object;switch(e.type){case"polygon":let n=i.A.moveVertex(e,a.x,a.y,t.selectedVertex);t.annotations[t.selectedAnnotation].object=n;break;case"obb":let l=s.A.moveVertex(e,a.x,a.y,t.selectedVertex);t.annotations[t.selectedAnnotation].object=l;break;case"bbox":let r=o.A.moveVertex(e,a.x,a.y,t.selectedVertex);void 0!=r&&(t.annotations[t.selectedAnnotation].object=r)}}},moveSelectedPoint:(t,e)=>{let a=e.payload,n=t.annotations[t.selectedAnnotation].object;if("keypoint"==n.type){let e=l.A.move(n,a.x,a.y);t.annotations[t.selectedAnnotation].object=e}},setPreviousMousePosition:(t,e)=>{let a=e.payload;t.previousMousePosition={x:a.x,y:a.y}},resetPreviousMousePosition:t=>{t.previousMousePosition=null},setSelectedTool:(t,e)=>{t.selectedTool=e.payload},setCanvasSize:(t,e)=>{t.width=e.payload.width,t.height=e.payload.height},setSelectedClassID:(t,e)=>{t.selectedClassID=e.payload},removeAnnotation:(t,e)=>{delete t.annotations[e.payload]},setIsDrawing:(t,e)=>{t.isDrawing=e.payload},setIsEditing:(t,e)=>{t.isEditing=e.payload},zoomIn:t=>{t.zoom=t.zoom+50},zoomOut:t=>{t.zoom=Math.max(t.zoom-50,400)},setOffsets:(t,e)=>{t.offsets=e.payload},resetHoveringVertex:t=>{t.hoveringVertex=-1},resetCanvasState:()=>r}}),{startDrawRect:d,updateDrawRect:y,updateHoveringAnnotation:x,updateHoveringVertex:h,goBackwardHistory:g,goForwardHistory:b,selectAnnotationFromHover:u,selectVertexFromHover:p,setSelectedTool:v,moveVertex:f,resetCanvasState:m,resetSelectedAnnotation:A,resetSelectedVertex:I,saveAnnotationsHistory:P,setCanvasSize:V,setSelectedClassID:w,loadAnnotations:M,resetHistory:k,setSelectedAnnotation:H,removeAnnotation:j,updateAnnotation:S,setIsDrawing:D,setIsEditing:C,drawPoint:E,moveSelectedPoint:N,setPreviousMousePosition:_,resetPreviousMousePosition:T,zoomIn:z,zoomOut:O,setOffsets:L,startDrawObb:B,updateDrawObb:R,updateHoveringHandle:W,setHandle:F,startDrawPoly:J,updateDrawPoly:Q,updateDrawPolyVertex:U,resetHoveringVertex:Z}=c.actions,K=c.reducer},2335:(t,e,a)=>{a.d(e,{A:()=>o});class n{static move(t,e,a){let n=!0;if(this.getVertices(t).forEach(t=>{var o,l;o=t.x,l=t.y,(!(o+e>=0)||!(o+e<=1)||!(l+a>=0)||!(l+a<=1))&&(n=!1)}),n){let n={...t};return n.xc=n.xc+e,n.yc=n.yc+a,n}return t}static moveVertex(t,e,a,n){let o=this.getVertices(t)[n],l=e-o.x,s=a-o.y,{du:i,dv:r}=this.decomposeVector(l,s,t.alpha),c=this.vertexDirection(n),d=Math.abs(t.w+i*c.su),y=Math.abs(t.h+r*c.sv),x=t.xc+l/2,h=t.yc+s/2;return{...t,xc:x,yc:h,w:d,h:y}}static vertexDirection(t){switch(t){case 0:return{su:-1,sv:-1};case 1:return{su:1,sv:-1};case 2:return{su:1,sv:1};case 3:return{su:-1,sv:1};default:return{su:0,sv:0}}}static decomposeVector(t,e,a){let n=Math.cos(a),o=Math.sin(a);return{du:t*n+e*o,dv:-(t*o)+e*n}}static rotate(t,e){return{...t,alpha:t.alpha+e}}static isHoveringHandle(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02,o=this.getHandle(t);return Math.hypot(o.x-e,o.y-a)<n}static findNearestVertex(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02,o=this.getVertices(t),l=null,s=1/0;return o.forEach((t,o)=>{let i=Math.hypot(t.x-e,t.y-a);i<n&&i<s&&(s=i,l=o)}),l}static draw(t,e){let a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[255,0,0],s=e.width,i=e.height,r=e.getContext("2d");if(null==r)return;r.strokeStyle="rgba(".concat(l[0],", ").concat(l[1],", ").concat(l[2],", 1)");let c=this.getVertices(t),d=c[0].x*s,y=c[0].y*i,x=c[1].x*s,h=c[1].y*i,g=c[2].x*s,b=c[2].y*i,u=c[3].x*s,p=c[3].y*i;if(r.lineWidth=1,r.fillStyle="rgba(".concat(l[0],", ").concat(l[1],", ").concat(l[2],", 0.9)"),r.beginPath(),r.rect(d-2,y-2,4,4),r.rect(x-2,h-2,4,4),r.rect(g-2,b-2,4,4),r.rect(u-2,p-2,4,4),r.fill(),null!=n){let e=this.getVertex(t,n);e&&r.rect(e.x*s-5,e.y*i-5,10,10),r.stroke()}r.closePath(),r.beginPath();let v=this.getHandle(t);r.arc(v.x*s,v.y*i,3,0,2*Math.PI),r.fill(),r.beginPath(),o&&(r.lineWidth=1,r.arc(v.x*s,v.y*i,6,0,2*Math.PI),r.stroke()),r.setLineDash([3,6]),r.moveTo(t.xc*s,t.yc*i),r.lineTo(v.x*s,v.y*i),r.stroke(),r.closePath(),r.beginPath(),r.setLineDash([]),r.moveTo(d,y),r.lineTo(x,h),r.lineTo(g,b),r.lineTo(u,p),r.closePath(),a&&(r.fillStyle="rgba(".concat(l[0],", ").concat(l[1],", ").concat(l[2],", 0.2)"),r.fill()),r.stroke()}static containPoint(t,e,a){let n=t.xc,o=t.yc,l=t.alpha,s=e-n,i=a-o,r=Math.cos(l),c=Math.sin(l);return Math.abs(s*r+i*c)<=t.w/2&&Math.abs(-s*c+i*r)<=t.h/2}static getHandle(t){let e=Math.cos(t.alpha),a=Math.sin(t.alpha),n=t.xc,o=t.yc,l=t.w/3;return{x:n+l*e,y:o+l*a}}static getVertex(t,e){let a=Math.cos(t.alpha),n=Math.sin(t.alpha),o=t.xc,l=t.yc,s=.5*t.w,i=.5*t.h;switch(e){case 0:return{x:o-s*a+i*n,y:l-s*n-i*a};case 1:return{x:o+s*a+i*n,y:l+s*n-i*a};case 2:return{x:o+s*a-i*n,y:l+s*n+i*a};case 3:return{x:o-s*a-i*n,y:l-s*n+i*a}}}static getVertices(t){return[0,1,2,3].map(e=>this.getVertex(t,e))}static longestDimSize(t){return Math.max(t.h,t.w)}}let o=n},2738:(t,e,a)=>{a.d(e,{M:()=>s});var n=a(1990),o=a(1783),l=a(1006);let s=(0,n.U1)({reducer:{canvas:o.Ay,settings:l.Ay}})},7132:(t,e,a)=>{a.d(e,{A:()=>o});class n{static move(t,e,a){let n=t.shell.map(t=>({x:t.x+e,y:t.y+a}));return{...t,shell:n}}static draw(t,e){let a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[255,0,0],l=e.width,s=e.height,i=e.getContext("2d");if(null!=i){if(i.strokeStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 1)"),i.fillStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 1)"),i.lineWidth=1,i.beginPath(),t.shell.forEach(t=>{let e=t.x*l,a=t.y*s;i.rect(e-2,a-2,4,4)}),i.fill(),null!=n){let e=t.shell[n];e&&i.rect(e.x*l-5,e.y*s-5,10,10),i.stroke()}i.closePath(),i.beginPath(),t.shell.forEach((t,e)=>{let a=t.x*l,n=t.y*s;e?i.lineTo(a,n):i.moveTo(a,n)}),i.closePath(),a&&(i.fillStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 0.2)"),i.fill()),i.stroke()}}static addVertex(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;if(-1==n)return{...t,shell:[...t.shell,{x:e,y:a}]};let o=[...t.shell.slice(0,n),{x:e,y:a},...t.shell.slice(n)];return{...t,shell:o}}static moveVertex(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,o=[...t.shell];return -1==n&&(n=o.length-1),o[n]&&(o[n]={x:e,y:a}),{...t,shell:o}}static findNearestVertex(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02,o=null,l=1/0;return t.shell.forEach((t,s)=>{let i=Math.hypot(t.x-e,t.y-a);i<n&&i<l&&(l=i,o=s)}),o}static isNearVertex(t,e,a,n){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.02,l=t.shell[n];return void 0!=l&&Math.hypot(l.x-e,l.y-a)<o}static containPoint(t,e,a){let n=t.shell,o=n.length,l=!1;for(let t=0;t<o;t++){let{x:s,y:i}=n[t],{x:r,y:c}=n[(t+1)%o];if(i>a!=c>a){if(s>e&&r>e)l=!l;else{if(s<e&&r<e)continue;let t=(r-s)*(a-i)/(c-i+1e-12)+s;if(1e-12>Math.abs(e-t))return!0;e<t&&(l=!l)}}}return l}static boundingBox(t){let e=Infinity,a=Infinity,n=-1/0,o=-1/0;return t.shell.forEach(t=>{t.x>n&&(n=t.x),t.x<e&&(e=t.x),t.y>o&&(o=t.y),t.y<a&&(a=t.y)}),{minX:e,minY:a,maxX:n,maxY:o}}static longestDimSize(t){let{minX:e,maxX:a,minY:n,maxY:o}=this.boundingBox(t);return Math.max(a-e,o-n)}}let o=n},7355:(t,e,a)=>{a.d(e,{A:()=>o});class n{static move(t,e,a){let n=!0;if([1,2,3,4].forEach(o=>{var l,s;let i=this.giveVertex(t,o);i&&(l=i.x,s=i.y,l+e<0||l+e>1||s+a<0||s+a>1)&&(n=!1)}),n){let n={...t};return n.x1=n.x1+e,n.x2=n.x2+e,n.y1=n.y1+a,n.y2=n.y2+a,n}return t}static moveVertex(t,e,a,n){if(null==n)return;let o={...t};switch(n){case 1:o.x1=e,o.y1=a;break;case 2:o.x2=e,o.y1=a;break;case 3:o.x2=e,o.y2=a;break;case 4:o.x1=e,o.y2=a}return o}static findNearestVertex(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02,o=new Map([[1,{x:t.x1,y:t.y1}],[2,{x:t.x2,y:t.y1}],[3,{x:t.x2,y:t.y2}],[4,{x:t.x1,y:t.y2}]]),l=null,s=1/0;return o.forEach((t,o)=>{let i=Math.hypot(t.x-e,t.y-a);i<n&&i<s&&(s=i,l=o)}),l}static draw(t,e){let a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[255,0,0],l=e.width,s=e.height,i=e.getContext("2d");if(null==i)return;i.strokeStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 1)");let r=t.x1*l,c=t.x2*l,d=t.y1*s,y=t.y2*s;if(i.beginPath(),i.lineWidth=1,i.fillStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 0.9)"),i.rect(r-2,d-2,4,4),i.rect(r-2,y-2,4,4),i.rect(c-2,d-2,4,4),i.rect(c-2,y-2,4,4),i.fill(),n){let e=this.giveVertex(t,n);e&&i.rect(e.x*l-5,e.y*s-5,10,10),i.stroke()}i.closePath(),i.beginPath(),i.rect(r,d,c-r,y-d),a&&(i.fillStyle="rgba(".concat(o[0],", ").concat(o[1],", ").concat(o[2],", 0.2)"),i.fill()),i.stroke(),i.closePath()}static containPoint(t,e,a){let n=Math.min(t.x1,t.x2),o=Math.max(t.x1,t.x2),l=Math.min(t.y1,t.y2),s=Math.max(t.y1,t.y2);return!!(n<e)&&!!(e<o)&&!!(l<a)&&!!(a<s)}static giveVertex(t,e){switch(e){case 1:return{x:t.x1,y:t.y1};case 2:return{x:t.x2,y:t.y1};case 3:return{x:t.x2,y:t.y2};case 4:return{x:t.x1,y:t.y2};default:return null}}static longestDimSize(t){return Math.max(Math.abs(t.y2-t.y1),Math.abs(t.x2-t.x1))}}let o=n},8108:(t,e,a)=>{a.d(e,{A:()=>o});class n{static move(t,e,a){return{...t,x:e,y:a}}static isNear(t,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02;return Math.hypot(t.x-e,t.y-a)<n}static draw(t,e){let a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[255,0,0],o=e.width,l=e.height,s=t.x*o,i=t.y*l,r=e.getContext("2d");r&&(r.beginPath(),r.fillStyle="rgba(".concat(n[0],", ").concat(n[1],", ").concat(n[2],", 0.9)"),r.arc(s,i,3,0,2*Math.PI),r.fill(),r.closePath(),a&&(r.beginPath(),r.strokeStyle="rgba(".concat(n[0],", ").concat(n[1],", ").concat(n[2],", 0.8)"),r.lineWidth=2,r.arc(s,i,6,0,2*Math.PI),r.stroke(),r.closePath()))}}let o=n}}]);